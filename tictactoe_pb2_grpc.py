# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import tictactoe_pb2 as tictactoe__pb2


class TicTacToeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ack = channel.unary_unary(
                '/TicTacToe/Ack',
                request_serializer=tictactoe__pb2.AckRequest.SerializeToString,
                response_deserializer=tictactoe__pb2.AckResponse.FromString,
                )
        self.Time = channel.unary_unary(
                '/TicTacToe/Time',
                request_serializer=tictactoe__pb2.TimeRequest.SerializeToString,
                response_deserializer=tictactoe__pb2.TimeResponse.FromString,
                )
        self.ReceiveTime = channel.unary_unary(
                '/TicTacToe/ReceiveTime',
                request_serializer=tictactoe__pb2.SetTime.SerializeToString,
                response_deserializer=tictactoe__pb2.SetTimeResponse.FromString,
                )
        self.Move = channel.unary_unary(
                '/TicTacToe/Move',
                request_serializer=tictactoe__pb2.MoveRequest.SerializeToString,
                response_deserializer=tictactoe__pb2.MoveResponse.FromString,
                )


class TicTacToeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Ack(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Time(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Move(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TicTacToeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ack': grpc.unary_unary_rpc_method_handler(
                    servicer.Ack,
                    request_deserializer=tictactoe__pb2.AckRequest.FromString,
                    response_serializer=tictactoe__pb2.AckResponse.SerializeToString,
            ),
            'Time': grpc.unary_unary_rpc_method_handler(
                    servicer.Time,
                    request_deserializer=tictactoe__pb2.TimeRequest.FromString,
                    response_serializer=tictactoe__pb2.TimeResponse.SerializeToString,
            ),
            'ReceiveTime': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveTime,
                    request_deserializer=tictactoe__pb2.SetTime.FromString,
                    response_serializer=tictactoe__pb2.SetTimeResponse.SerializeToString,
            ),
            'Move': grpc.unary_unary_rpc_method_handler(
                    servicer.Move,
                    request_deserializer=tictactoe__pb2.MoveRequest.FromString,
                    response_serializer=tictactoe__pb2.MoveResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TicTacToe', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TicTacToe(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Ack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TicTacToe/Ack',
            tictactoe__pb2.AckRequest.SerializeToString,
            tictactoe__pb2.AckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Time(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TicTacToe/Time',
            tictactoe__pb2.TimeRequest.SerializeToString,
            tictactoe__pb2.TimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReceiveTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TicTacToe/ReceiveTime',
            tictactoe__pb2.SetTime.SerializeToString,
            tictactoe__pb2.SetTimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Move(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TicTacToe/Move',
            tictactoe__pb2.MoveRequest.SerializeToString,
            tictactoe__pb2.MoveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
