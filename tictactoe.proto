syntax = "proto3";

service TicTacToe {
    rpc Ack(AckRequest) returns (AckResponse) {}
    rpc Start(StartMessage) returns (StartResponse) {}
    rpc Restart(RestartMessage) returns (Empty) {}
    rpc Time(TimeRequest) returns (TimeResponse) {}
    rpc ReceiveTime(SetTime) returns (SetTimeResponse) {}
    rpc ReceiveTimeString(SetTimeString) returns(SetTimeResponse) {}
    rpc Move(MoveRequest) returns (MoveResponse) {}
    rpc Election(ElectionMessage) returns (ElectionResponse) {}
    rpc Coordinator(CoordinatorMessage) returns (ElectionResponse) {}
    rpc GetGameBoard(BoardRequest) returns (BoardResponse) {}
    rpc UpdatePlayers(UpdateMessage) returns (Empty) {}
    rpc QuitGame(QuitMessage) returns (Empty) {}
    rpc Timeout(TimeoutRequest) returns (Empty) {}
}

message AckRequest {}

message AckResponse {
    string name = 1;
    int32 id = 2;
}

message StartMessage {}

message StartResponse {
    bool ready = 1;
}

message RestartMessage {
    int32 node_id = 1;
    string node_name = 2;
    bool timeout = 3;
}

message TimeRequest {}

message TimeResponse {
    string time = 1;
}

message SetTime {
    float time_diff = 1;
}

message SetTimeString {
    string time = 1;
}

message SetTimeResponse {
    bool time_accepted = 1;
}

message ElectionMessage {
    int32 id = 1;
}

message ElectionResponse {
    bool acknowledgement = 1;
}

message CoordinatorMessage {
    int32 coordinator_id = 1;
}

message MoveRequest {
    int32 tile = 1;
    int32 player_id = 2;
    string symbol = 3;
}

message MoveResponse {
    bool success = 1;
    string fail_message = 2;
}

message BoardRequest {}

message BoardResponse {
    repeated string board = 1;
    string timestamp = 2;
    bool success = 3;
}

message UpdateMessage {
    string update_message = 1;
    bool has_game_started = 2;
}

message QuitMessage {
    int32 node_id = 1;
    string node_name = 2;
}

message TimeoutRequest {
    int32 node_id = 1;
    string node_name = 2;
    float timeout_len = 3;
}

message Empty {}